#; grammar name Category III
#; grammar tier High
#; import common.txt

#$Main     = $pcat3 | $cat3
#$pcat3    = $polite $cat3

#$cat3     = $complexman
#$cat3     = $fndobj
#$cat3     = $incomplete
#$cat3     = $erroneous
#$cat3     = $followout


##############################################################################
#
# Production Rules required by common.txt
#
##############################################################################
#; Define an object type
#;$object   = bowl | cloth | tray
#; MODIFIED FOR GENERALITY
#$object = {object}

{object} = OBJECT
{object?} = OBJECT
{category} = OBJECT

#; Rule for finding a specific (named) person
#$findp    = $vbfind a $pgenders
#$findp    = $vbfind a person {gesture}
#$findp    = $vbfind a person $pose

#; A named or described person at the given place
#$whowhere = {name 1 meta: {name 1} is at the {beacon 1}}
#$whowhere = the {gesture} person in the {room}
the {gesture} person in the {room} = O {gesture} B-PERSON O O {room}


##############################################################################
#
# Complex manipulation
#
##############################################################################
#$complexman  = $cmanwarn $cmancmd

#$cmancmd     = Pour some cereals into the bowl
Pour some cereals into the bowl = {pour} O O B-OBJECT O O TO[B-CONTAINER]

#$cmancmd     = $goroom {void meta: All access doors to {room 1} bust be closed.}
$goroom {void meta: All access doors to {room 1} bust be closed.} = {navigate} $goroom

#$cmancmd     = $vbbtake the {kobject} to the {placement 2 meta: Block access to {placement 2} with a movable object or furniture}
$vbbtake the {kobject} to the {placement 2 meta: Block access to {placement 2} with a movable object or furniture} = {deliver} $vbbtake O {kobject} O O {placement 2 meta: Block access to {placement 2} with a movable object or furniture}

#$cmancmd     = $vbbring me the $abspos object $cmanobjsrc
$vbbring me the $abspos object $cmanobjsrc = {deliver} $vbbring TO[B-OPERATOR] O $abspos B-OBJECT $cmanobjsrc

#$cmancmd     = $vbbring me the object $relpos the {object}  $cmanobjsrc
$vbbring me the object $relpos the {object}  $cmanobjsrc = {deliver} $vbbring TO[B-OPERATOR] O B-OBJECT $relpos O REL[{object}] $cmanobjsrc

#$cmancmd     = $vbbring me the $oprop (object | {category}) $cmanobjsrc
$vbbring me the $oprop (object | {category}) $cmanobjsrc = {deliver} $vbbring TO[B-OPERATOR] O $oprop (B-OBJECT | {category}) $cmanobjsrc

#$cmanwarn    = {void meta: This command is for DSPL and OPL only}

#$cmanobjsrc  = from the {placement 2 meta: Place at least 5 objects in the {placement 2}}
from the {placement 2 meta: Place at least 5 objects in the {placement 2}} = O O FROM[{placement 2 meta: Place at least 5 objects in the {placement 2}}]



##############################################################################
#
# Incomplete commands
#
##############################################################################
#$incomplete  = $vbfollow {name 1 meta: {name 1} is at the {beacon 1}}
$vbfollow {name 1 meta: {name 1} is at the {beacon 1}} = {follow} $vbfollow {name 1 meta: {name 1} is at the {beacon 1}}

#$incomplete  = $cmanwarn $vbbring me the {object?}
$cmanwarn $vbbring me the {object?} = {deliver} $cmanwarn $vbbring TO[B-OPERATOR] O {object?}

#$incomplete  = $vbdeliver {object?} to $someone
$vbdeliver {object?} to $someone = {deliver} $vbdeliver {object?} O TO[$someone]

#$incomplete  = $vbguide {name 1 meta: {name 1} is at the {beacon 1}} to the {beacon 2}
$vbguide {name 1 meta: {name 1} is at the {beacon 1}} to the {beacon 2} = {guide} $vbguide {name 1 meta: {name 1} is at the {beacon 1}} O O TO[{beacon 2}]

#$incomplete  = meet $inguidewho and $vbguide {pron}
meet $inguidewho and $vbguide {pron} = {guide} O $inguidewho O $vbguide {pron}

#$incomplete  = $gobeacon, meet $inguidewho, and $vbguide {pron}
$gobeacon, meet $inguidewho, and $vbguide {pron} = {guide} FROM[$gobeacon], O $inguidewho, O $vbguide {pron}

#$inguidewho  = {name 1 meta: {name 1} must be taken from {beacon 1} to {beacon 2}, but he will get lost before reaching it}



##############################################################################
#
# Wrong commands
#
##############################################################################
#$erroneous   = $cmanwarn $vbbtake the $errnoobj to the {placement 2}
$cmanwarn $vbbtake the $errnoobj to the {placement 2} = {deliver} $cmanwarn $vbbtake O $errnoobj O O TO[{placement 2}]

#$erroneous   = $cmanwarn $vbplace the $errnoobj on the {placement 2}
$cmanwarn $vbplace the $errnoobj on the {placement 2} = {deliver} $cmanwarn $vbplace O $errnoobj O O TO[{placement 2}]

#$erroneous   = $cmanwarn $vbbring me the $errnoobj
$cmanwarn $vbbring me the $errnoobj = {deliver} $cmanwarn $vbbring TO[B-OPERATOR] O $errnoobj

#$erroneous   = $vbguide $errnoper from the {beacon 1} to the {beacon 2}
$vbguide $errnoper from the {beacon 1} to the {beacon 2} = {guide} $vbguide $errnoper O O FROM[{beacon 1}] O O TO[{beacon 2}]

#$erroneous   = $vbguide {name 1} from the {beacon 1} to the {beacon 1 meta: Destination is {beacon 2}}
$vbguide {name 1} from the {beacon 1} to the {beacon 1 meta: Destination is {beacon 2}} = {guide} $vbguide {name 1} O O FROM[{beacon 1}] O O TO[{beacon 1 meta: Destination is {beacon 2}}]

#$erroneous   = $vbguide the $ernamperobj from the {beacon 1} to the {beacon 2}
$vbguide the $ernamperobj from the {beacon 1} to the {beacon 2} = {guide} $vbguide O $ernamperobj O O FROM[{beacon 1}] O O TO[{beacon 2}]

#$erroneous   = $gobeacon, meet {name 1}, and $vbfollow {pron} to the {beacon 1 meta: Destination is {room 2}}
$gobeacon, meet {name 1}, and $vbfollow {pron} to the {beacon 1 meta: Destination is {room 2}} = {follow} FROM[$gobeacon], O {name 1}, O $vbfollow {pron} O O TO[{beacon 1 meta: Destination is {room 2}}]

#$erroneous   = $gobeacon, meet $errnoper, and $vbfollow {pron} to the {room 2}
$gobeacon, meet $errnoper, and $vbfollow {pron} to the {room 2} = {follow} FROM[$gobeacon], O $errnoper, O $vbfollow {pron} O O TO[{room 2}]

#$erroneous   = $gobeacon, meet the $ernamperobj, and $vbfollow it {void meta: Destination is {room 2}}
$gobeacon, meet the $ernamperobj, and $vbfollow it {void meta: Destination is {room 2}} = {guide} FROM[$gobeacon], O O $ernamperobj, O $vbfollow O {void meta: Destination is {room 2}}

#$errnoobj    = {object 1 meta: is not at the {placement 1} but somewhere else in the same room}
#$errnoper    = {name 1 meta: is not at the {beacon 1} but somewhere else in the same room}
#$ernamperobj = {object 1 meta: Replace {object 1} with {name 1}}
#$ernamperobj = {category 1 meta: Replace {category 1} with {name 1}}

{object 1} = OBJECT


##############################################################################
#
# Follow [& guide]
#
##############################################################################
#$followout   = $fllwoutdest meet {name 1} at the {beacon 1}, $vbfollow {pron}, and $goroom
$fllwoutdest meet {name 1} at the {beacon 1}, $vbfollow {pron}, and $goroom = {follow_guide} $fllwoutdest O {name 1} O O FROM[{beacon 1}], $vbfollow {pron}, O TO[$goroom]

#$followout   = $fllwoutdest meet {name 1} at the {beacon 1}, $vbfollow {pron}, and $vbguide {pron} back
$fllwoutdest meet {name 1} at the {beacon 1}, $vbfollow {pron}, and $vbguide {pron} back = {follow_guide} $fllwoutdest O {name 1} O O FROM[{beacon 1}], $vbfollow {pron}, O $vbguide {pron} TO[B-OPERATOR]

#$fllwoutdest = {void meta: The robot must follow {name 1} outside the arena}



##############################################################################
#
# Find objects
#
##############################################################################
#$fndobj   = tell me which are the three $oprop (objects | {category}) on the {placement 1 meta: Place at least 5 objects on the {placement 1}}
tell me which are the three $oprop (objects | {category}) on the {placement 1 meta: Place at least 5 objects on the {placement 1}} = {find} O TO[B-OPERATOR] O O O B-NUMBER $oprop (B-OBJECT | {category}) O O FROM[{placement 1 meta: Place at least 5 objects on the {placement 1}}]

#$fndobj   = $vbfind three {category} in the {room meta: Place only 3 objects in the room}
$vbfind three {category} in the {room meta: Place only 3 objects in the room} = {find} $vbfind B-NUMBER {category} O O FROM[{room meta: Place only 3 objects in the room}]


##############################################################################
#
# Rules
#
##############################################################################
#; Position
#$abspos      = (left | right) most
(left | right) most = (B-ABSPOS | B-ABSPOS) I-ABSPOS

#$relpos      = at the (left | right) of 
at the (left | right) of = O O (B-RELPOS | B-RELPOS) O

#$relpos      = on top of
on top of = O B-RELPOS O

#$relpos      = above | behind | under 
above | behind | under = B-RELPOS | B-RELPOS | B-RELPOS
